{"version":3,"file":"UserDefinedFunction.js","sourceRoot":"","sources":["../../../src/client/UserDefinedFunction/UserDefinedFunction.ts"],"names":[],"mappings":"AAGA,OAAO,EACL,4BAA4B,EAC5B,aAAa,EACb,eAAe,EACf,eAAe,EACf,YAAY,EACb,MAAM,cAAc,CAAC;AAItB,OAAO,EAAE,2BAA2B,EAAE,MAAM,+BAA+B,CAAC;AAE5E;;;;GAIG;AACH,MAAM,OAAO,mBAAmB;IAO9B;;;;OAIG;IACH,YACkB,SAAoB,EACpB,EAAU,EACT,aAA4B;QAF7B,cAAS,GAAT,SAAS,CAAW;QACpB,OAAE,GAAF,EAAE,CAAQ;QACT,kBAAa,GAAb,aAAa,CAAe;IAC5C,CAAC;IAfJ;;OAEG;IACH,IAAW,GAAG;QACZ,OAAO,4BAA4B,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9F,CAAC;IAYD;;OAEG;IACI,KAAK,CAAC,IAAI,CAAC,OAAwB;QACxC,MAAM,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEnC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAgC;YAC5E,IAAI;YACJ,YAAY,EAAE,YAAY,CAAC,GAAG;YAC9B,UAAU,EAAE,EAAE;YACd,OAAO;SACR,CAAC,CAAC;QACH,OAAO,IAAI,2BAA2B,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjG,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,OAAO,CAClB,IAAmC,EACnC,OAAwB;QAExB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;SAClC;QAED,MAAM,GAAG,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;YAC/B,MAAM,GAAG,CAAC;SACX;QAED,MAAM,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEnC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAgC;YAC/E,IAAI;YACJ,IAAI;YACJ,YAAY,EAAE,YAAY,CAAC,GAAG;YAC9B,UAAU,EAAE,EAAE;YACd,OAAO;SACR,CAAC,CAAC;QACH,OAAO,IAAI,2BAA2B,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjG,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,MAAM,CAAC,OAAwB;QAC1C,MAAM,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEnC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAC/C,IAAI;YACJ,YAAY,EAAE,YAAY,CAAC,GAAG;YAC9B,UAAU,EAAE,EAAE;YACd,OAAO;SACR,CAAC,CAAC;QACH,OAAO,IAAI,2BAA2B,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjG,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ClientContext } from \"../../ClientContext\";\nimport {\n  createUserDefinedFunctionUri,\n  getIdFromLink,\n  getPathFromLink,\n  isResourceValid,\n  ResourceType\n} from \"../../common\";\nimport { RequestOptions } from \"../../request\";\nimport { Container } from \"../Container\";\nimport { UserDefinedFunctionDefinition } from \"./UserDefinedFunctionDefinition\";\nimport { UserDefinedFunctionResponse } from \"./UserDefinedFunctionResponse\";\n\n/**\n * Used to read, replace, or delete a specified User Definied Function by id.\n *\n * @see {@link UserDefinedFunction} to create, upsert, query, read all User Defined Functions.\n */\nexport class UserDefinedFunction {\n  /**\n   * Returns a reference URL to the resource. Used for linking in Permissions.\n   */\n  public get url(): string {\n    return createUserDefinedFunctionUri(this.container.database.id, this.container.id, this.id);\n  }\n  /**\n   * @hidden\n   * @param container - The parent {@link Container}.\n   * @param id - The id of the given {@link UserDefinedFunction}.\n   */\n  constructor(\n    public readonly container: Container,\n    public readonly id: string,\n    private readonly clientContext: ClientContext\n  ) {}\n\n  /**\n   * Read the {@link UserDefinedFunctionDefinition} for the given {@link UserDefinedFunction}.\n   */\n  public async read(options?: RequestOptions): Promise<UserDefinedFunctionResponse> {\n    const path = getPathFromLink(this.url);\n    const id = getIdFromLink(this.url);\n\n    const response = await this.clientContext.read<UserDefinedFunctionDefinition>({\n      path,\n      resourceType: ResourceType.udf,\n      resourceId: id,\n      options\n    });\n    return new UserDefinedFunctionResponse(response.result, response.headers, response.code, this);\n  }\n\n  /**\n   * Replace the given {@link UserDefinedFunction} with the specified {@link UserDefinedFunctionDefinition}.\n   * @param options -\n   */\n  public async replace(\n    body: UserDefinedFunctionDefinition,\n    options?: RequestOptions\n  ): Promise<UserDefinedFunctionResponse> {\n    if (body.body) {\n      body.body = body.body.toString();\n    }\n\n    const err = {};\n    if (!isResourceValid(body, err)) {\n      throw err;\n    }\n\n    const path = getPathFromLink(this.url);\n    const id = getIdFromLink(this.url);\n\n    const response = await this.clientContext.replace<UserDefinedFunctionDefinition>({\n      body,\n      path,\n      resourceType: ResourceType.udf,\n      resourceId: id,\n      options\n    });\n    return new UserDefinedFunctionResponse(response.result, response.headers, response.code, this);\n  }\n\n  /**\n   * Delete the given {@link UserDefined}.\n   */\n  public async delete(options?: RequestOptions): Promise<UserDefinedFunctionResponse> {\n    const path = getPathFromLink(this.url);\n    const id = getIdFromLink(this.url);\n\n    const response = await this.clientContext.delete({\n      path,\n      resourceType: ResourceType.udf,\n      resourceId: id,\n      options\n    });\n    return new UserDefinedFunctionResponse(response.result, response.headers, response.code, this);\n  }\n}\n"]}